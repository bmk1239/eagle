- name: Harvest FreeTV cookies
  env:
    CHROME_PATH: ${{ steps.chrome.outputs.chrome-path }}
    IL_PROXY   : ${{ env.IL_PROXY }}
  run: |
    node <<'EOF'
    const puppeteer = require('puppeteer-core');
    const fs = require('fs');

    const sleep = ms => new Promise(r => setTimeout(r, ms));

    (async () => {
      const browser = await puppeteer.launch({
        executablePath: process.env.CHROME_PATH,
        headless: 'new',
        args: [
          '--no-sandbox',
          '--disable-setuid-sandbox',
          '--ignore-certificate-errors',
          `--proxy-server=${process.env.IL_PROXY}`
        ]
      });

      const page = await browser.newPage();
      await page.goto('https://web.freetv.tv/', { waitUntil: 'domcontentloaded' });
      await sleep(15000); // wait for Cloudflare

      const client  = await page.target().createCDPSession();
      const { cookies } = await client.send('Network.getAllCookies');
      const cookieStr = cookies
        .filter(c => c.domain.endsWith('freetv.tv'))
        .map(c => `${c.name}=${c.value}`)
        .join('; ');

      if (!cookieStr.includes('cf_clearance')) {
        console.error('❌  cf_clearance not found – Cloudflare still blocking');
        process.exit(1);
      }

      console.log('::add-mask::' + cookieStr);
      fs.appendFileSync(process.env.GITHUB_ENV,
        `FREETV_COOKIE_HARVESTED=${cookieStr}\n`);

      await browser.close();
    })();
    EOF
